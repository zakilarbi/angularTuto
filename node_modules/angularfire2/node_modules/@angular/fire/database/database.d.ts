import { NgZone } from '@angular/core';
import { PathReference, QueryFn, AngularFireList, AngularFireObject } from './interfaces';
import { FirebaseDatabase, FirebaseOptions, FirebaseAppConfig, RealtimeDatabaseURL, DATABASE_URL, ɵAngularFireSchedulers } from '@angular/fire';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class AngularFireDatabase {
    readonly database: FirebaseDatabase;
    readonly schedulers: ɵAngularFireSchedulers;
    readonly keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>;
    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, databaseURL: string | null, platformId: Object, zone: NgZone);
    list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T>;
    object<T>(pathOrRef: PathReference): AngularFireObject<T>;
    createPushId(): string | null;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularFireDatabase>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AngularFireDatabase>;
}
export { PathReference, DatabaseSnapshot, ChildEvent, ListenEvent, QueryFn, AngularFireList, AngularFireObject, AngularFireAction, Action, SnapshotAction } from './interfaces';
export { RealtimeDatabaseURL, DATABASE_URL, DATABASE_URL as URL };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWJhc2UuZC50cyIsInNvdXJjZXMiOlsiZGF0YWJhc2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBhdGhSZWZlcmVuY2UsIFF1ZXJ5Rm4sIEFuZ3VsYXJGaXJlTGlzdCwgQW5ndWxhckZpcmVPYmplY3QgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgRmlyZWJhc2VEYXRhYmFzZSwgRmlyZWJhc2VPcHRpb25zLCBGaXJlYmFzZUFwcENvbmZpZywgUmVhbHRpbWVEYXRhYmFzZVVSTCwgREFUQUJBU0VfVVJMLCDJtUFuZ3VsYXJGaXJlU2NoZWR1bGVycyB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQW5ndWxhckZpcmVEYXRhYmFzZSB7XG4gICAgcmVhZG9ubHkgZGF0YWJhc2U6IEZpcmViYXNlRGF0YWJhc2U7XG4gICAgcmVhZG9ubHkgc2NoZWR1bGVyczogybVBbmd1bGFyRmlyZVNjaGVkdWxlcnM7XG4gICAgcmVhZG9ubHkga2VlcFVuc3RhYmxlVW50aWxGaXJzdDogPFQ+KG9icyQ6IE9ic2VydmFibGU8VD4pID0+IE9ic2VydmFibGU8VD47XG4gICAgY29uc3RydWN0b3Iob3B0aW9uczogRmlyZWJhc2VPcHRpb25zLCBuYW1lT3JDb25maWc6IHN0cmluZyB8IEZpcmViYXNlQXBwQ29uZmlnIHwgbnVsbCB8IHVuZGVmaW5lZCwgZGF0YWJhc2VVUkw6IHN0cmluZyB8IG51bGwsIHBsYXRmb3JtSWQ6IE9iamVjdCwgem9uZTogTmdab25lKTtcbiAgICBsaXN0PFQ+KHBhdGhPclJlZjogUGF0aFJlZmVyZW5jZSwgcXVlcnlGbj86IFF1ZXJ5Rm4pOiBBbmd1bGFyRmlyZUxpc3Q8VD47XG4gICAgb2JqZWN0PFQ+KHBhdGhPclJlZjogUGF0aFJlZmVyZW5jZSk6IEFuZ3VsYXJGaXJlT2JqZWN0PFQ+O1xuICAgIGNyZWF0ZVB1c2hJZCgpOiBzdHJpbmcgfCBudWxsO1xufVxuZXhwb3J0IHsgUGF0aFJlZmVyZW5jZSwgRGF0YWJhc2VTbmFwc2hvdCwgQ2hpbGRFdmVudCwgTGlzdGVuRXZlbnQsIFF1ZXJ5Rm4sIEFuZ3VsYXJGaXJlTGlzdCwgQW5ndWxhckZpcmVPYmplY3QsIEFuZ3VsYXJGaXJlQWN0aW9uLCBBY3Rpb24sIFNuYXBzaG90QWN0aW9uIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmV4cG9ydCB7IFJlYWx0aW1lRGF0YWJhc2VVUkwsIERBVEFCQVNFX1VSTCwgREFUQUJBU0VfVVJMIGFzIFVSTCB9O1xuIl19